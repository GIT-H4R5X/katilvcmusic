@Client.on_message(command(["vstream", f"vstream@{BOT_USERNAME}"]) & other_filters)async def vstream(c: Client, m: Message): await m.delete() chat_id = m.chat.id keyboard = InlineKeyboardMarkup( [ [ InlineKeyboardButton(text="• Mᴇɴᴜ", callback_data="cbmenu"), InlineKeyboardButton(text="• Cʟᴏsᴇ", callback_data="cls"), ] ] ) if m.sender_chat: return await m.reply_text("you're an __Anonymous__ Admin !\n\n» revert back to user account from admin rights.") try: aing = await c.get_me() except Exception as e: return await m.reply_text(f"error:\n\n{e}") a = await c.get_chat_member(chat_id, aing.id) if a.status != "administrator": await m.reply_text( f"💡 To use me, I need to be an **Administrator** with the following **permissions**:\n\n» ❌ __Delete messages__\n» ❌ __Add users__\n» ❌ __Manage video chat__\n\nData is **updated** automatically after you **promote me**" ) return if not a.can_manage_voice_chats: await m.reply_text( "missing required permission:" + "\n\n» ❌ __Manage video chat__" ) return if not a.can_delete_messages: await m.reply_text( "missing required permission:" + "\n\n» ❌ __Delete messages__" ) return if not a.can_invite_users: await m.reply_text("missing required permission:" + "\n\n» ❌ __Add users__") return try: ubot = (await user.get_me()).id b = await c.get_chat_member(chat_id, ubot) if b.status == "kicked": await m.reply_text( f"@{ASSISTANT_NAME} **is banned in group** {m.chat.title}\n\n» **unban the userbot first if you want to use this bot.**" ) return except UserNotParticipant: if m.chat.username: try: await user.join_chat(m.chat.username) except Exception as e: await m.reply_text(f"❌ **userbot failed to join**\n\n**reason**: `{e}`") return else: try: invitelink = await c.export_chat_invite_link( m.chat.id ) if invitelink.startswith("https://t.me/+"): invitelink = invitelink.replace( "https://t.me/+", "https://t.me/joinchat/" ) await user.join_chat(invitelink) except UserAlreadyParticipant: pass except Exception as e: return await m.reply_text( f"❌ **userbot failed to join**\n\n**reason**: `{e}`" ) if len(m.command) < 2: await m.reply("» give me a live-link/m3u8 url/youtube link to stream.") else: if len(m.command) == 2: link = m.text.split(None, 1)[1] Q = 720 loser = await c.send_message(chat_id, "🔄 **processing stream...**") elif len(m.command) == 3: op = m.text.split(None, 1)[1] link = op.split(None, 1)[0] quality = op.split(None, 1)[1] if quality == "720" or "480" or "360": Q = int(quality) else: Q = 720 await m.reply( "» __only 720, 480, 360 allowed__ \n💡 **now streaming video in 720p**" ) loser = await c.send_message(chat_id, "🔄 **processing stream...**") else: await m.reply("**/vstream {link} {720/480/360}**") regex = r"^(https?\:\/\/)?(www\.youtube\.com|youtu\.?be)\/.+" match = re.match(regex, link) if match: veez, livelink = await ytdl(link) else: livelink = link veez = 1 if veez == 0: await 
